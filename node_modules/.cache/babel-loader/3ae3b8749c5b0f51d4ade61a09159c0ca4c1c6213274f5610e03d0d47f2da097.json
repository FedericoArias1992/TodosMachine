{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\n//Vamos a usar localstorage para tener persistencia de datos, sin usar base de datos relacional ni no relacionales\n//let stringifiedArray = localStorage.setItem('Version_1', JSON.stringify(array)); //-> para inicializar la version_1 del Localstorage\n//tambien vamos a crear un customhook para manejar todo lo relacionado a localstorage:\nfunction useLocalStorage(initialValue) {\n  _s();\n  let localstoragedArray = localStorage.getItem('Version_1');\n  let parsedArray;\n  const [item, setItem] = useState(initialValue); //asignamos el valor vacio o inicial al estado del customhook\n  if (!localstoragedArray) {\n    localStorage.setItem('Version_1', JSON.stringify(initialValue)); //si Version_1 (primera vez que se abre la app) = Vacio -> array vacio, pq si no hay que mostrar, la app crashea!\n    parsedArray = [];\n  } else {\n    parsedArray = JSON.parse(localstoragedArray);\n    setItem(parsedArray);\n    console.log(item);\n  }\n  //setItem(parsedArray); //asignamos el valor vacio o inicial al estado del customhook\n  //necesitamos la funcion que actualice el estado de los elementos y a la vez el localstorage tal que exista persistencia de datos\n  //al refrescar la pagina:\n  const saveStateTodos = newTodos => {\n    localStorage.setItem('Version_1', JSON.stringify(newTodos)); //reescribimos el array de todos actualizado\n    setItem(newTodos);\n  };\n  return [item, saveStateTodos]; //saveStateTodos es el estados de los array persistente de todos, item es la lista de todos parseada\n} //con esta desestructuracion de arrays como devolucion del customhook, ya podemos usar saveStateTodos()\n_s(useLocalStorage, \"igs8DDL3VYMnEE6fMaAkgfUKJ5s=\");\nexport { useLocalStorage };","map":{"version":3,"names":["useState","useLocalStorage","initialValue","_s","localstoragedArray","localStorage","getItem","parsedArray","item","setItem","JSON","stringify","parse","console","log","saveStateTodos","newTodos"],"sources":["/home/federico/Proyectos/CursosPlatzi/CursoReact/curso-react-intro/src/Hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from \"react\";\n//Vamos a usar localstorage para tener persistencia de datos, sin usar base de datos relacional ni no relacionales\n//let stringifiedArray = localStorage.setItem('Version_1', JSON.stringify(array)); //-> para inicializar la version_1 del Localstorage\n//tambien vamos a crear un customhook para manejar todo lo relacionado a localstorage:\nfunction useLocalStorage(initialValue){\n    let localstoragedArray = localStorage.getItem('Version_1');\n    let parsedArray;\n    const [item, setItem] = useState(initialValue); //asignamos el valor vacio o inicial al estado del customhook\n    if (!localstoragedArray) {\n      localStorage.setItem('Version_1',JSON.stringify(initialValue));  //si Version_1 (primera vez que se abre la app) = Vacio -> array vacio, pq si no hay que mostrar, la app crashea!\n      parsedArray = [];\n    } else {\n      parsedArray = JSON.parse(localstoragedArray);\n      setItem(parsedArray);\n      console.log(item);\n    }\n    //setItem(parsedArray); //asignamos el valor vacio o inicial al estado del customhook\n    //necesitamos la funcion que actualice el estado de los elementos y a la vez el localstorage tal que exista persistencia de datos\n     //al refrescar la pagina:\n    const saveStateTodos = (newTodos) => {\n      localStorage.setItem('Version_1', JSON.stringify(newTodos));  //reescribimos el array de todos actualizado\n      setItem(newTodos);\n    }\n    return [item, saveStateTodos];  //saveStateTodos es el estados de los array persistente de todos, item es la lista de todos parseada\n  }                                 //con esta desestructuracion de arrays como devolucion del customhook, ya podemos usar saveStateTodos()\n  \nexport {useLocalStorage};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA;AACA;AACA,SAASC,eAAeA,CAACC,YAAY,EAAC;EAAAC,EAAA;EAClC,IAAIC,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC1D,IAAIC,WAAW;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACE,YAAY,CAAC,CAAC,CAAC;EAChD,IAAI,CAACE,kBAAkB,EAAE;IACvBC,YAAY,CAACI,OAAO,CAAC,WAAW,EAACC,IAAI,CAACC,SAAS,CAACT,YAAY,CAAC,CAAC,CAAC,CAAE;IACjEK,WAAW,GAAG,EAAE;EAClB,CAAC,MAAM;IACLA,WAAW,GAAGG,IAAI,CAACE,KAAK,CAACR,kBAAkB,CAAC;IAC5CK,OAAO,CAACF,WAAW,CAAC;IACpBM,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACnB;EACA;EACA;EACC;EACD,MAAMO,cAAc,GAAIC,QAAQ,IAAK;IACnCX,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAE;IAC9DP,OAAO,CAACO,QAAQ,CAAC;EACnB,CAAC;EACD,OAAO,CAACR,IAAI,EAAEO,cAAc,CAAC,CAAC,CAAE;AAClC,CAAC,CAAiC;AAAAZ,EAAA,CApB3BF,eAAe;AAsBxB,SAAQA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}